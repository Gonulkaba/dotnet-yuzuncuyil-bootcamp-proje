// <auto-generated />
using System;
using DotnetYuzuncuYilBootcamp.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotnetYuzuncuYilBootcamp.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DotnetYuzuncuYilBootcamp.Core.Models.Duty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("DutyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Duties", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Müşteri talepleri doğrultusunda, mevcut sistemde kullanılan veritabanı güncelleme aracını geliştirme.",
                            DutyName = "Veritabanı Güncelleme",
                            EmployeeId = 1,
                            StartedDate = new DateTime(2024, 1, 4, 2, 21, 17, 200, DateTimeKind.Local).AddTicks(9186),
                            Status = "Tamamlanmadı"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Mevcut müşteri mobil uygulamasının performansını artırmak ve kullanıcı deneyimini optimize etmek.",
                            DutyName = "Performans Optimizasyonu",
                            EmployeeId = 2,
                            StartedDate = new DateTime(2024, 1, 4, 2, 21, 17, 200, DateTimeKind.Local).AddTicks(9205),
                            Status = "Tamamlanmadı"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Web sitenin güvenliğini artırmak ve potansiyel güvenlik açıklarını önlemek için güvenlik denetimi gerçekleştirmek.",
                            DutyName = "Güvenlik Denetimi",
                            EmployeeId = 3,
                            StartedDate = new DateTime(2024, 1, 4, 2, 21, 17, 200, DateTimeKind.Local).AddTicks(9207),
                            Status = "Tamamlanmadı"
                        });
                });

            modelBuilder.Entity("DotnetYuzuncuYilBootcamp.Core.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "gonulkb12@gmail.com",
                            Password = "123456",
                            Position = "Front-end Developer",
                            StartedDate = new DateTime(2024, 1, 4, 2, 21, 17, 200, DateTimeKind.Local).AddTicks(9775),
                            UserName = "gonulkaba"
                        },
                        new
                        {
                            Id = 2,
                            Email = "aysecet48@gmail.com",
                            Password = "45879545",
                            Position = "Back-end Developer",
                            StartedDate = new DateTime(2024, 1, 4, 2, 21, 17, 200, DateTimeKind.Local).AddTicks(9778),
                            UserName = "aysecetin"
                        },
                        new
                        {
                            Id = 3,
                            Email = "velialii98@gmail.com",
                            Password = "85697452",
                            Position = "Full Stack Developer",
                            StartedDate = new DateTime(2024, 1, 4, 2, 21, 17, 200, DateTimeKind.Local).AddTicks(9780),
                            UserName = "alivelii1"
                        });
                });

            modelBuilder.Entity("DotnetYuzuncuYilBootcamp.Core.Models.EmployeeProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeesProfiles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Düzce/Merkez",
                            EmployeeId = 1,
                            FirstName = "Gönül",
                            LastName = "Kaba",
                            Phone = "05978456895"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Ankara/Merkez",
                            EmployeeId = 2,
                            FirstName = "Ayşe",
                            LastName = "Çetin",
                            Phone = "05768459212"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Mersin/Merkez",
                            EmployeeId = 3,
                            FirstName = "Ali",
                            LastName = "Veli",
                            Phone = "05632165498"
                        });
                });

            modelBuilder.Entity("DotnetYuzuncuYilBootcamp.Core.Models.Duty", b =>
                {
                    b.HasOne("DotnetYuzuncuYilBootcamp.Core.Models.Employee", "Employee")
                        .WithMany("Duty")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DotnetYuzuncuYilBootcamp.Core.Models.EmployeeProfile", b =>
                {
                    b.HasOne("DotnetYuzuncuYilBootcamp.Core.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DotnetYuzuncuYilBootcamp.Core.Models.Employee", b =>
                {
                    b.Navigation("Duty");
                });
#pragma warning restore 612, 618
        }
    }
}
